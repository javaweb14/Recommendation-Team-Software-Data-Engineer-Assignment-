---
version: '2'
services:

  zookeeper:
    image: confluentinc/cp-zookeeper:5.0.0
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
    networks:
      - common-network

  kafka:
    image: confluentinc/cp-kafka:5.0.0
    depends_on:
      - zookeeper
    networks:
      - common-network
    ports:
      - "9092:9092"
    environment:
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://127.0.0.1:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"

  postgres:
    image: hepsiburada/postgres:13.1-case
    ports:
      - "5435:5432"
    networks:
      - common-network
    environment:
      - PGDATA=postgres

  api:
    container_name: api
    build:
      context: API
      dockerfile: Dockerfile
    image: api:latest
    ports:
      - 8087:8087
    environment:
      POSTGRES_URL: jdbc:postgresql://postgres:5432/postgres
    networks:
      - common-network



  view-producer-app:
    container_name: view-producer-app
    build:
      context: View-Producer-App
      dockerfile: Dockerfile
    image: view-producer-app:latest
    ports:
      - 8084:8084
    environment:
      BOOTSTRAP_SERVERS: localhost:9092
    networks:
      - common-network

  stream-reader-app:
    container_name: stream-reader-app
    build:
      context: Stream-Reader-App
      dockerfile: Dockerfile
    image: stream-reader-app:latest
    ports:
      - 8085:8085
    environment:
      POSTGRES_URL: jdbc:postgresql://postgres:5432/postgres
      BOOTSTRAP_SERVERS: localhost:9092
    networks:
      - common-network

networks:
  common-network:
    driver: bridge